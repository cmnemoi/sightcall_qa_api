name: Continuous Delivery

on:
  workflow_run:
    workflows: ["Continuous Integration", "Continous Delivery (Infrastructure)"]
    types:
      - completed
  workflow_dispatch:

jobs:
  release:
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      contains(fromJson('["Continuous Integration", "Continous Delivery (Infrastructure)"]'), github.event.workflow_run.name) &&
      github.event.workflow_run.event == 'push'
    name: Create GitHub Release
    runs-on: ubuntu-24.04
    concurrency: release
    permissions:
      id-token: write
      contents: write

    steps:
    - uses: actions/checkout@v4
      name: Checkout
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create GitHub Release
      uses: python-semantic-release/python-semantic-release@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Deploy API
    runs-on: ubuntu-24.04
    needs: release
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      contains(fromJson('["Continuous Integration", "Continous Delivery (Infrastructure)"]'), github.event.workflow_run.name) &&
      github.event.workflow_run.event == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get latest commit hash
        id: get_hash
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ vars.DOCKERHUB_USERNAME }}/sightcall-qa-api:${{ steps.get_hash.outputs.hash }}
            ${{ vars.DOCKERHUB_USERNAME }}/sightcall-qa-api:latest

      - name: Authenticate with gcloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Deploy with Cloud Run
        run: |
          gcloud run deploy sightcall-qa-api \
            --image=docker.io/${{ vars.DOCKERHUB_USERNAME }}/sightcall-qa-api:latest \
            --platform=managed \
            --region=${{ vars.GCP_REGION }} \
            --allow-unauthenticated \
            --quiet
